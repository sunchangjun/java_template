<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="page-view-size" content="1280*720">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title></title>
</head>
<body bgcolor="transparent">
<div style="position:absolute; left:0px; top:0px; width:1280px; height:720px; overflow:hidden;">
	<div id="play_status" style="position:absolute; left: 505px; top: 100px; width:270px; height:115px; background-image:url(images/x_bg.png); z-index:998; visibility:hidden;">
    	<div id="pause_div" style="position:absolute; left: 43px; top: 26px; width:183px; height:63px; background-image:url(images/pause.png); visibility:hidden;"></div>
        <div id="speed_div" style="position:absolute; left: 0px; top: 0px; width:270px; height:115px; visibility:hidden;">
        	<div id="speed_status" style="position:absolute; left: 51px; top: 34px; width:69px; height:47px; background-image:url(images/forward.png)"></div>
            <div id="speed_num" style="position:absolute; left: 135px; top: 28px; width:120px; height:59px; background-image:url(images/speed2.png)"></div>
        </div>
    </div>

  <div id="paly_chunk" style="position: absolute; left: 0px; top: 581px; width: 1280px; height: 139px; display:block;">
  		<div style="position:absolute; left:0px; top:-15px; width:1280px; height:154px; background-color:#333; opacity:0.5;"></div>
        <div style="position: absolute; left: 141px; top: 0px; width: 998px; height: 6px; background-image: url(images/054.png);">
            <div id="prop" style="position:absolute;left:0px;top:0px;"><img src="images/055.png" width="5" height="6" /><img id="prop_img" src="images/056.png" width="5" height="6" /><img src="images/057.png" width="5" height="6" /></div>
            <div id="prop_end" style="position: absolute; left: 0px; top: -8px; width: 26px; height: 26px; background-image: url(images/058.png); visibility:hidden;"></div>
    </div>
    
    <div id="current_time" style="position: absolute; left: 22px; top: -15px; width: 100px; height: 35px; line-height: 35px; font-size: 25px; color: #FFF; text-align: right;"></div>
    <div id="duration_time" style="position: absolute; left: 1164px; top: -15px; width: 100px; height: 35px; line-height: 35px; font-size: 25px; color: #FFF; text-align: left;"></div>
    
    <div id="paly_chunk_in" style="display:block;">
    <div style="position: absolute; left: 137px; top: 42px; width: 54px; height: 54px; background-image: url(images/110.png);">
    	<div style="position: absolute; left: 16px; top: 16px; width: 22px; height: 22px; background-image: url(images/120.png);"></div>
    </div>
    <div id="bottom_btn0" style="position: absolute; left: 108px; top: 13px; width: 112px; height: 112px; background-image: url(images/tm.gif);"></div>
      <div style="position: absolute; left: 224px; top: 33px; width: 74px; height: 74px; background-image: url(images/103.png);">
       	  <div id="bottom_btn1_in0" style="position: absolute; left: 22px; top: 19px; width: 30px; height: 35px; background-image: url(images/102.png); visibility:hidden;"></div>
   	    <div id="bottom_btn1_in1" style="position: absolute; left: 25px; top: 19px; width: 24px; height: 36px; background-image: url(images/119.png);"></div>
      </div>
      <div id="bottom_btn1" style="position: absolute; left: 195px; top: 4px; width: 132px; height: 132px; background-image: url(images/tm.gif);"></div>
      <div style="position: absolute; left: 330px; top: 42px; width: 54px; height: 54px; background-image: url(images/110.png);">
   	    <div style="position: absolute; left: 16px; top: 16px; width: 22px; height: 22px; background-image: url(images/118.png);"></div>
    </div>
    <div id="bottom_btn2" style="position: absolute; left: 301px; top: 13px; width: 112px; height: 112px; background-image: url(images/tm.gif);"></div>
       
      <div id="bottom_btn3" style="position: absolute; left: 964px; top: 52px; width: 42px; height: 39px; background-image: url(images/112.png);"></div>    
      <div id="bottom_btn4" style="position: absolute; left: 1035px; top: 53px; width: 32px; height: 37px; background-image: url(images/107.png);"></div>
      <div id="bottom_btn5" style="position: absolute; left: 1098px; top: 56px; width: 40px; height: 32px; background-image: url(images/114.png);"></div>
      </div>
  </div>
  
	<div id="volume_chunk" style="position:absolute; left:0px; top:581px; width:1280px; height:139px; display:none;">
    	<div style="position:absolute; left:0px; top:0px; width:1280px; height:139px; background-color:#333; opacity:0.5;"></div>
    	<img id="volume_img" src="images/123.png" style="position: absolute; left: 264px; top: 32px; width: 48px; height: 41px;" />
    	<div id="volume_num" style="position: absolute; left: 983px; top: 32px; width: 80px; height: 41px; line-height: 41px; font-size: 25px; color: #fff;"></div>
    	<div style="position: absolute; left: 314px; top: 50px; width: 652px; height: 6px; background-image: url(images/121.png);">
          <div id="volume_prop" style="position:absolute;left:0px;top:0px;"><img src="images/055.png" width="5" height="6" /><img id="volume_prop_img" src="images/056.png" width="5" height="6" /><img src="images/057.png" width="5" height="6" /></div>
            <div id="volume_prop_end" style="position: absolute; left: 0px; top: -7px; width: 20px; height: 20px; background-image: url(images/126.png); visibility: visible;"></div>
   	  </div>
    </div>
    
    <img id="mute_img" src="images/125.png" style="position: absolute; left: 80px; top: 80px; width: 55px; height: 48px; z-index:99; visibility:hidden;" />
    
    <div id="play_list" style="position:absolute; left:700px; top:0px; width:580px; height:720px; line-height:35px; color:#fff; font-size: 22px; background-image:url(images/100.png); z-index:999; display:none;">
   	  <div style="position: absolute; left: 165px; top: 59px; width: 250px; height: 35px; font-size: 35px; text-align: center;">播放列表</div>
      <img id="play_list_top_btn" src="images/020.png" style="position: absolute; left: 445px; top: 65px; width: 21px; height: 23px;" />
      <div id="play_list_top_text" style="position: absolute; left: 473px; top: 60px; width: 80px; height: 35px; font-size: 18px;">清空</div>
      <div id="page_num" style="position: absolute; left: 38px; top: 65px; width: 88px; height: 35px; text-align:left; color:#0ff;">1/1</div>
      
        
        <div id="play_list0" style="position: absolute; left: 28px; top: 135px; width: 528px; height: 51px;">
            <div id="play_list0_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list0_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
        <div id="play_list1" style="position: absolute; left: 28px; top: 210px; width: 528px; height: 51px;">
            <div id="play_list1_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list1_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
      <div id="play_list2" style="position: absolute; left: 28px; top: 285px; width: 528px; height: 51px;">
            <div id="play_list2_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list2_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
      <div id="play_list3" style="position: absolute; left: 28px; top: 360px; width: 528px; height: 51px;">
            <div id="play_list3_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list3_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
      <div id="play_list4" style="position: absolute; left: 28px; top: 435px; width: 528px; height: 51px;">
            <div id="play_list4_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list4_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
      <div id="play_list5" style="position: absolute; left: 28px; top: 510px; width: 528px; height: 51px;">
            <div id="play_list5_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list5_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
      <div id="play_list6" style="position: absolute; left: 28px; top: 585px; width: 528px; height: 51px;">
            <div id="play_list6_title" style="position: absolute; left: 35px; top: 8px; width: 255px; height: 35px; font-size: 25px; overflow:hidden;"></div>
            <div id="play_list6_name" style="position: absolute; left: 380px; top: 8px; width: 130px; height: 35px; color: #f1f1f1; overflow:hidden;"></div>
        </div>
        
        
        <div id="play_list_tip" style="position: absolute; left: 28px; top: 181px; width: 528px; height: 90px; line-height:30px; font-size: 22px; text-align:center;">QQ音乐&nbsp;&nbsp;听我想听的歌！<br/><br/><span style="font-size:30px; color:#0FF;">队列中没有歌曲</span></div>
  </div>  
     
    
  <div id="test_new" style="position: absolute; left: 50px; top: 50px; width: 919px; height: 353px; background-color: #FFF; color: #000; word-break: break-all; visibility: hidden;"></div>
</div>

<!--自适应焦点 begin-->
 <div id="self_ad_focus" style="position: absolute; left: 700px; top: 104px; width: 580px; line-height: 1px; height: 111px; visibility: hidden; z-index: 999;">
    <table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
        <tr>
            <td width="50" height="50" style="background:url(images/focus/focus_lt.png); background-repeat:no-repeat;"></td>
            <td style="background:url(images/focus/focus_t.png);background-repeat:repeat-x;">&nbsp;</td>
            <td width="50" style="background:url(images/focus/focus_rt.png);background-repeat:no-repeat;"></td>
        </tr>
        <tr>
            <td style="background:url(images/focus/focus_l.png);background-repeat:repeat-y;"></td>
            <td>&nbsp;</td>
            <td style="background:url(images/focus/focus_r.png);background-repeat:repeat-y;"></td>
        </tr>
        <tr>
            <td width="50" height="50" style="background:url(images/focus/focus_lb.png);background-repeat:no-repeat;"></td>
            <td style="background:url(images/focus/focus_b.png);background-repeat:repeat-x;">&nbsp;</td>
            <td width="50" style="background:url(images/focus/focus_rb.png);background-repeat:no-repeat;"></td>
        </tr>
    </table>
</div>
<!--自适应焦点 end-->

<!--应焦点 start-->
<div id="play_list_focus" style="position: absolute; left: 728px; top: 135px; width: 528px; height: 51px; visibility:hidden; z-index:999;">
    <img id="play_list_focus_btn0" src="images/091.png" style="position: absolute; left: 310px; top: 13px; width: 21px; height: 24px;" />
    <img id="play_list_focus_btn1" src="images/020.png" style="position: absolute; left: 340px; top: 14px; width: 21px; height: 23px;" />
</div>
<!--应焦点 end-->

<div id="pop_up" style="position:absolute; left:0px; top:0px; width:1280px; height:720px; background-image:url(images/037.png); background-repeat:no-repeat; overflow:hidden; display:none; z-index:999;">
	<div id="pop_up_bg" style="position: absolute; left: 441px; top: 195px; width: 391px; height: 200px; background-image: url(images/038.png); color: #FFF; font-size: 23px; text-align: center; line-height: 30px; background-repeat: no-repeat;">
    	<table style="position: absolute; left: 15px; top: 8px; width: 361px; height: 120px;" cellpadding="0" cellspacing="0">
        	<tr>
            	<td id="pop_up_text" width="100%" height="100%" align="center">&nbsp;</td>
            </tr>
        </table>
      <div id="pop_up_btn0" style="position: absolute; left: 0px; top: 142px; width: 196px; height: 58px; line-height: 58px; font-size: 25px; background-image: url(images/tm.gif);"></div>
        <div id="pop_up_btn1" style="position: absolute; left: 195px; top: 142px; width: 196px; height: 58px; line-height: 58px; font-size: 25px; background-image: url(images/tm.gif);"></div>
        <div id="pop_up_btn2" style="position: absolute; left: 118px; top: 133px; width: 156px; height: 46px; line-height: 46px; font-size: 25px; background-image: url(images/040.png);"></div>
    </div>
</div>

<script type="text/javascript" src="js/function.js"></script>
<script type="text/javascript">
var playListObj = {
	pos : 0,
	pos_this : 0,
	max_size : 7,
	cur_size : 0,
	size_line : 1,
	page_pos : 0,
	page_pos_this : 0,
	page_size : 1,
	len : 0,
	focusObj : $("self_ad_focus"),
	dataArray : [],
	
	btn_pos : 0,
	btn_size : 2,
	
	init : function(_arr) {				
		this.dataArray = _arr || this.dataArray;
		this.len = this.dataArray.length;
		
		this.page_size = Math.ceil(this.len / this.max_size);
		if(this.page_pos >= this.page_size) {
			this.page_pos = this.page_size - 1;
		}
		
		this.show();
	},
	
	checkAndShowSM : function(_flag) {
		var flag = _flag || 0;
				
		if(0 == this.len) {
			if(checkSTBType()) {
				this.focusObj.style.webkitTransitionDuration = "0ms";
				$("play_list_focus").style.webkitTransitionDuration = "0ms";
			}
			
			$("play_list_tip").style.visibility = "visible";
			$("play_list_focus").style.visibility = "hidden";
			this.focusObj.style.visibility = "hidden";
		} else {
			if(checkSTBType()) {
				this.focusObj.style.webkitTransitionDuration = "350ms";
				$("play_list_focus").style.webkitTransitionDuration = "350ms";
			}
			
			$("play_list_tip").style.visibility = "hidden";
			
			if(1 != flag) {
				$("play_list_focus").style.visibility = "visible";
				this.focusObj.style.visibility = "visible";
			}
		}
	},
	
	showDIV : function() {
		oparateObj.focusOut();
		oparateObj.area = this.len > 0 ? 1 : 3;
		oparateObj.focusOn();
		$("play_list").style.display = "block";
		this.checkAndShowSM();
	},
	
	hiddenDIV : function() {
		oparateObj.focusOut();
		if(10 !== oparateObj.area && 11 !== oparateObj.area) {
			oparateObj.area = 2;
		}
		oparateObj.focusOn();
		$("play_list").style.display = "none";
		$("play_list_tip").style.visibility = "hidden";
		$("play_list_focus").style.visibility = "hidden";
		this.focusObj.style.visibility = "hidden";
	},
	
	show : function() {
		if(this.page_pos == this.page_size - 1) {
			if(0 != this.len && 0 == this.len % this.max_size) {
				this.cur_size = this.max_size;
			} else {
				this.cur_size = this.len % this.max_size;
			}
		} else {
			this.cur_size = this.max_size;
		}
		
		var obj;
		var num = this.page_pos * this.max_size;
		
		for(var i = 0; i < this.max_size; i++) {
			if(i < this.cur_size) {
				obj = this.dataArray[num + i];
				$("play_list" + i + "_title").innerHTML = obj.title;
				$("play_list" + i + "_name").innerHTML = obj.director;
				$("play_list" + i).style.visibility = "visible";
			} else {
				$("play_list" + i).style.visibility = "hidden";
			}
		}
		
		$("page_num").innerHTML = (this.page_pos + 1) + "/" + this.page_size;
	},
	
	time_out : 0,
	focusOn : function(_flag) {
		var num = this.page_pos * this.max_size + this.pos;
		if(!this.dataArray[num]) {
			return;
		}
		this.time_out = showTitleForMarquee(this.dataArray[num].title, $("play_list" + this.pos + "_title"), 10);
		if(!_flag) {
			this.focusObj.style.visibility = "visible";
			$("play_list_focus").style.visibility = "visible";
			this.focusObj.style.width = "580px";
			this.focusObj.style.height = "111px";
			
			if(checkSTBType()) {
				this.focusObj.style.webkitTransitionDuration = "350ms";
				$("play_list_focus").style.webkitTransitionDuration = "350ms";
			}
		}
	},
	
	focusOut : function(_flag) {
		var num = this.page_pos * this.max_size + this.pos;
		clearTimeout(this.time_out);
		if(!this.dataArray[num]) {
			return;
		}
		$("play_list" + this.pos + "_title").innerHTML = this.dataArray[num].title;
		if(!_flag) {
			this.focusObj.style.visibility = "hidden";
			$("play_list_focus").style.visibility = "hidden";
			
			if(checkSTBType()) {
				this.focusObj.style.webkitTransitionDuration = "0ms";
				$("play_list_focus").style.webkitTransitionDuration = "0ms";
			}
		}
	},
	
	focusMove : function(_num) {
		var num = _num || 0;
		var pos = this.pos + num;
		this.btnFocusOut(1);
		if(pos < 0) {
			this.changePage(-1);
		} else if(pos >= this.cur_size) {
			this.changePage(1);
		} else {
			this.focusOut(1);
			this.pos = pos;
			this.focusObj.style.top = 104 + 75 * Math.floor(this.pos / this.size_line) + "px";
			$("play_list_focus").style.top = 135 + 75 * Math.floor(this.pos / this.size_line) + "px";
			this.focusOn(1);
			this.btnInit();
		}
	},
	
	btnFocusOn : function(_flag) {
		$("play_list_focus_btn" + this.btn_pos).src = 0 == this.btn_pos ? "images/092.png" : "images/021.png";
	},
	
	btnFocusOut : function(_flag) {
		$("play_list_focus_btn" + this.btn_pos).src = 0 == this.btn_pos ? "images/091.png" : "images/020.png";
	},
	
	btnInit : function() {
		this.btn_pos = 0;
		this.btnFocusMove();
	},
	
	btnFocusMove : function(_num) {
		var num = _num || 0;
		var pos = this.btn_pos + num;
		
		if(pos >= 0 && pos < this.btn_size) {
			this.btnFocusOut(1);
			this.btn_pos = pos;
			this.btnFocusOn(1);
		}
	},
	
	changePage : function(_num) {
		var num = _num || 0;
		var pos = this.page_pos + num;
		if(pos >= 0 && pos < this.page_size) {
			this.focusOut(1);
			this.pos = 0;
			this.page_pos = pos;
			
			this.show();
			this.focusMove();
		}
	},
	
	doSelect : function() {
		if(0 == this.len) {
			location.href = oparateObj.backUrl;
			return;
		}
		
		var num = this.page_pos * this.max_size + this.pos;
		var obj = this.dataArray[num];
		
		if(0 == this.btn_pos) {
			this.pos_this = this.pos;
			this.page_pos_this = this.page_pos;
			oparateObj.vodname = obj.title;
			oparateObj.assetId = obj.assetId;
			oparateObj.id = obj.id;
			this.hiddenDIV();
			
			ajaxForDetails(obj.id);
			//ajaxForVODDATA(obj.assetId, obj.id);
		} else {
			ajaxForRemovePlayList(obj.id, num);
		}
	}
};

var playObj = {
	pos : 1,
	size : 6,
	area : 0,
	play_pos : 0,
	play_ms_pos : 0, //0：顺序循环，1：单曲循环，2：随机
	play_ms_arr : [["114.png", "115.png"],["105.png", "106.png"],["116.png", "117.png"]],
	array : [
		{name:"上一曲", imgArr:["tm.gif", "111.png"]},
		{name:"播放", imgArr:["tm.gif", "104.png"]},
		{name:"下一曲", imgArr:["tm.gif", "111.png"]},
		{name:"喜欢", imgArr:["112.png", "113.png"]},
		{name:"播放列表", imgArr:["107.png", "108.png"]},
		{name:"播放模式", imgArr:["114.png", "115.png"]}
	],
	
	init : function() {
		this.initPlayMS();
		this.show();
	},
	
	show : function() {
		
	},
	
	v_time_out : 0,
	v_flag : 0,
	visible : function(_area) {
		var return_flag = false;
		clearTimeout(this.v_time_out);
		this.volumeHidden();
		clearTimeout(this.vm_time_out);
		
		if(-1 == _area && !this.v_flag) {
			this.focusOut();
			this.area = 0;
			this.focusOn();
			return_flag = true;
		} else if(1 == _area && !this.v_flag) {
			this.focusOut();
			this.area = 1;
			this.focusOn();
			return_flag = true;
		}
		this.v_flag = 1;
		
		$("paly_chunk").style.display = "block";
		
		var that = this;
		this.v_time_out = setTimeout(function() {
			that.hidden();
		}, 5000);
		
		return return_flag;
	},
	
	hidden : function() {
		this.v_flag = 0;
		$("paly_chunk").style.display = "none";
	},
	
	vm_time_out : 0,
	vm_flag : 0,
	volumeVisible : function() {
		clearTimeout(this.v_time_out);
		this.hidden();
		clearTimeout(this.vm_time_out);
		
		this.vm_flag = 1;
		
		$("volume_chunk").style.display = "block";
		
		var that = this;
		this.vm_time_out = setTimeout(function() {
			that.volumeHidden();
		}, 5000);
	},
	
	volumeHidden : function() {
		this.vm_flag = 0;
		$("volume_chunk").style.display = "none";
	},
	
	initPlayMS : function(_play_ms_pos) {
		this.play_ms_pos = _play_ms_pos || this.play_ms_pos;
		this.array[5].imgArr = this.play_ms_arr[this.play_ms_pos];
	},
	
	initCollectMS : function(_collect, _flag) {
		var flag = _flag || 0;
		if(_collect) {
			this.array[3].imgArr = ["049.png", "050.png"];
		} else {
			this.array[3].imgArr = ["112.png", "113.png"];
		}
		$("bottom_btn3").style.backgroundImage = "url(images/" + this.array[3].imgArr[flag] + ")";
	},
	
	oparateProp : function(_current_time) {
		var current_time = parseFloat(_current_time || myMediaPlay.getCurrentTime());
		var prop_dis = Math.ceil(current_time * 980 / myMediaPlay.duration_time);
		if(prop_dis > 980) {
			prop_dis = 980;
		}
		$("prop_img").style.width = prop_dis + "px";
		$("prop_end").style.left = prop_dis + "px";
	},
	
	oparateVolumeProp : function(_cur_volume) {
		var cur_volume = parseFloat(_cur_volume);
		var prop_dis = Math.ceil(cur_volume * 640 / 100);
		$("volume_prop_img").style.width = prop_dis + "px";
		$("volume_prop_end").style.left = prop_dis + "px";
	},
	
	time_out : 0,
	doSomethingForCT : function() {
		var duration_time = (myMediaPlay.duration_time && "" != myMediaPlay.duration_time && 0 != myMediaPlay.duration_time) ? myMediaPlay.duration_time : myMediaPlay.getDurationTime();
		if(duration_time && "" != duration_time && 0 != duration_time) {
			var current_time = parseFloat(myMediaPlay.getCurrentTime());		
			
			$("duration_time").innerHTML = Q.parse_time(Math.ceil(parseFloat(duration_time)));
			$("current_time").innerHTML = Q.parse_time(Math.ceil(current_time));
			this.oparateProp(current_time);
		}
		
		var that = this;
		clearTimeout(that.time_out);
		that.time_out = setTimeout(function() {
			that.doSomethingForCT();
		}, 1000);
	},
	
	seek_time_out : 0,
	seek_flag : false,
	seek_time : 0,
	seek : function(_num) {
		if(myMediaPlay.duration_time && "" != myMediaPlay.duration_time) {	
		
			if(!this.seek_flag) {
				clearTimeout(this.time_out);
				this.seek_flag = true;
				this.seek_time = myMediaPlay.getCurrentTime();
			}	
		
			var currentTime = this.seek_time + _num * 5;
			if(currentTime < 1) {
				currentTime = 1;
			} else if(currentTime >= myMediaPlay.duration_time) {
				currentTime = myMediaPlay.duration_time - 5;
			}
			this.seek_time = currentTime;
			this.oparateProp(this.seek_time);
			
			var that = this;
			clearTimeout(this.seek_time_out);
			this.seek_time_out = setTimeout(function() {
				that.seek_flag = false;
				myMediaPlay.seek(that.seek_time);
				/*setTimeout(function() {
					playObj.doSomethingForCT();
				}, 2000);*/
			}, 2000);
		}
	},
	
	changeVolume : function(_num) {
		this.volumeVisible();
		var cur_volume = myMediaPlay.getVolume();
		cur_volume += 4 * _num;
		if(cur_volume > 100) {
			cur_volume = 100;
		}
		if(cur_volume < 0) {
			cur_volume = 0;
		}
		myMediaPlay.setVolume(cur_volume);
		
		$("volume_num").innerHTML = cur_volume;
		$("mute_img").style.visibility = "hidden";
		this.oparateVolumeProp(cur_volume);
		dcVolumeToReciveServlet();
	},
	
	changeMute : function() {
		var mute_flag = 0;
	
		if(myMediaPlay.getMuteFlag()) {
			mute_flag = 0;
			$("mute_img").style.visibility = "hidden";
		} else {
			mute_flag = 1;
			$("mute_img").style.visibility = "visible";
		}
		
		myMediaPlay.setMuteFlag(mute_flag);
	},
	
	pauseOrPlay : function() {
		if(0 == this.play_pos) {
			this.pauseSM();
		} else {
			this.playSM();
		}
	},
	
	playSM : function() {
		this.play_pos = 0;
		$("bottom_btn1_in0").style.visibility = "hidden";
		$("bottom_btn1_in1").style.visibility = "visible";
		myMediaPlay.resume();
		this.doSomethingForCT();
	},
	
	pauseSM : function() {
		this.play_pos = 1;
		$("bottom_btn1_in0").style.visibility = "visible";
		$("bottom_btn1_in1").style.visibility = "hidden";
		myMediaPlay.pause();
		dcPauseToReciveServlet();
		clearTimeout(this.time_out);
	},
	
	focusOn : function(_flag) {
		if(0 == this.area) {
			$("bottom_btn" + this.pos).style.backgroundImage = "url(images/" + this.array[this.pos].imgArr[1] + ")";
		} else {
			$("prop_end").style.visibility = "visible";
		}
	},
	
	focusOut : function(_flag) {
		if(0 == this.area) {
			$("bottom_btn" + this.pos).style.backgroundImage = "url(images/" + this.array[this.pos].imgArr[0] + ")";
		} else {
			$("prop_end").style.visibility = "hidden";
		}
	},
	
	focusMove : function(_num) {
		var num = _num || 0;
		var pos = this.pos + num;
		if(pos >= 0 && pos < this.size) {
			this.focusOut(1);
			this.pos = pos;
			this.focusOn(1);
		}
	},
	
	moveX : function(_num) {
		if(this.visible(1)) {
			return;
		}
		if(0 == this.area) {
			this.focusMove(_num);
		} else {
			this.seek(_num);
		}
	},
	
	moveY : function(_num) {
		if(this.visible(-1)) {
			return;
		}
		if(0 == this.area) {
			if(_num < 0) {
				this.focusOut();
				this.area = 1;
				this.focusOn();
			}
		} else if(1 == this.area) {
			if(_num > 0) {
				this.focusOut();
				this.area = 0;
				this.focusOn();
			}
		}
	},
	
	doSelect : function() {
		if(this.visible(-1)) {
			return;
		}
		if(0 == this.area) {
			switch(this.pos) {
				case 0 :
					if(playListObj.len > 0) {
						if(playListObj.pos == 0 && playListObj.page_pos == 0) {
							playListObj.page_pos = playListObj.page_size - 1;
							playListObj.pos = playListObj.len - playListObj.page_pos * playListObj.max_size;
							playListObj.init();
							playListObj.focusMove();
						} else {
							playListObj.focusMove(-1);
						}
						myMediaPlay.resume(1);
						playListObj.doSelect();						
					}
					break;
				case 1 :
					this.pauseOrPlay();
					break;
				case 2 :
					if(playListObj.len > 0) {
						if(playListObj.pos == playListObj.cur_size - 1 && playListObj.page_pos == playListObj.page_size - 1) {
							playListObj.pos = 0;
							playListObj.page_pos = 0;
							playListObj.init();
							playListObj.focusMove();
						} else {
							playListObj.focusMove(1);
						}
						myMediaPlay.resume(1);
						playListObj.doSelect();
					}
					break;
				case 3 :
					oparateCollect();
					break;
				case 4 :
					playListObj.showDIV();
					break;
				case 5 :
					this.play_ms_pos = (this.play_ms_pos + 1) % 3;
					this.initPlayMS();
					this.focusMove();
					break;
			}
		}
	}
};

var oparateObj = {
	area : 2,
	id : "",
	assetId : "",
	collect : false,
	vodname : "",
	auth_jq_flag : false,
	runTime : 0,
	
	backUrl : "",
	
	init : function() {
		this.getParameter();
		playObj.init();
		playObj.visible(1);
		
		this.focusOn();
		
		myMediaPlay.init(Q.getGlobalVar("qq_music_play_rtsp"));
		
		ajaxForDetails(this.id, 1);
		ajaxForLoadPlayList();
		ajaxForPalyNew(this.id);
		
		var that = this;
		ajaxForAuth(this.id, function(_rtsp, _runTime) {
			that.auth_jq_flag = true;
		}, function() {
			that.auth_jq_flag = false;
		});
		
		dcHTMLToReciveServlet(this.backUrl.split("?")[0], window.location.href.split("?")[0], "qq_music_my_play");
	},
	
	getParameter : function() {
		var area = Q.getDecoded("area");
		if(null != area && "null" != area) {
			this.area = parseInt(area);
		}
		
		var id = Q.getDecoded("id");
		if(null != id && "null" != id) {
			this.id = id;
		}
		
		var assetId = Q.getDecoded("assetId");
		if(null != assetId && "null" != assetId) {
			this.assetId = assetId;
		}
		
		var runTime = Q.getDecoded("runTime");
		if(null != runTime && "null" != runTime) {
			this.runTime = parseInt(runTime);
		}
		
		var backUrl = Q.getDecoded("backUrl");
		if(null != backUrl && "null" != backUrl) {
			this.backUrl = backUrl;
		}
	},
	
	focusOn : function() {
		switch(this.area) {
			case 0 :
				
				break;
			case 1 :
				playListObj.focusOn();
				playListObj.focusMove();
				break;
			case 2 :
				playObj.focusOn();
				playObj.focusMove();
				break;
			case 3 :
				$("play_list_top_btn").src = "images/021.png";
				$("play_list_top_text").style.color = "#0FF";
				break;
			case 10 :
				popUpObj.focusOn();
				break;
		}
	},
	
	focusOut : function() {
		switch(this.area) {
			case 0 :
				
				break;
			case 1 :
				playListObj.focusOut();
				break;
			case 2 :
				playObj.focusOut();
				break;
			case 3 :
				$("play_list_top_btn").src = "images/020.png";
				$("play_list_top_text").style.color = "#fff";
				break;
			case 10 :
				popUpObj.focusOut();
				break;
		}
	},
	
	moveX : function(_num) {
		switch(this.area) {
			case 0 :
				
				break;
			case 1 :
				playListObj.btnFocusMove(_num);
				break;
			case 2 :
				playObj.moveX(_num);
				break;
			case 3 :
				
				break;
			case 10 :
				popUpObj.focusMove(_num);
				break;
		}
	},
	
	moveY : function(_num) {
		switch(this.area) {
			case 0 :
				
				break;
			case 1 :
				if(0 == playListObj.pos && 0 == playListObj.page_pos && _num < 0) {
					this.focusOut();
					this.area = 3;
					this.focusOn();
				} else {
					playListObj.focusMove(_num * playListObj.size_line);
				}
				break;
			case 2 :
				playObj.moveY(_num);
				break;
			case 3 :
				if(_num > 0 && playListObj.len > 0) {
					this.focusOut();
					this.area = 1;
					this.focusOn();
				}
				break;
			case 10 :
				
				break;
		}
	},
	
	changePage : function(_num) {
		playListObj.changePage(_num);
	},
	
	doSelect : function() {
		switch(this.area) {
			case 0 :
				
				break;
			case 1 :
				if(0 == playListObj.len) {
					playListObj.hiddenDIV();
				} else {
					playListObj.doSelect();
				}
				break;
			case 2 :
				playObj.doSelect();
				break;
			case 3 :
				if(0 == playListObj.len) {
					playListObj.hiddenDIV();
				} else {
					ajaxForRemovePlayListAll();
				}
				break;
			case 10 :
				popUpObj.doSelect();
				break;
		}
	},
	
	doBack : function() {
		if(10 == this.area) {
			popUpObj.hidden();
		} else if(1 == this.area || 3 == this.area) {
			playListObj.hiddenDIV();
		} else {
			dcTCPopToReciveServlet();
			popUpObj.doFuc = function() {
				if(0 == popUpObj.pos) {
					dcEndToReciveServlet();
					location.href = oparateObj.backUrl;
				}
			}
			popUpObj.init("确定要退出吗？", "退出", "取消");
		}
	}
};

var start_time;
function init() {
	checkAndInitPress();
	oparateObj.init();
}
window.onload = init;

function exit() {
	ajaxForPaly(play_id_for_jl, start_time);
	myMediaPlay.stop();
	myMediaPlay.unbindPlayerInstance(myMediaPlay.nativePlayerInstanceID);
}
window.onunload = exit;

function ajaxForDetails(_id, _flag) {
	var flag = _flag || 0;
	ajax({
		url: paramObj.serverUrl + "details.do?userid=" + getCAcardNum() + "&id=" + _id,// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			var json = eval('('+html+')');
			if("0" == json.status) {
				oparateObj.collect = json.data.collect;
				playObj.initCollectMS(oparateObj.collect);
				
				oparateObj.id = json.data.id;
				oparateObj.assetId = json.data.assetId;
				oparateObj.vodname = json.data.title;
				
				if(1 != flag) {
					ajaxForVODDATA(json.data.id);
				}
			} else {
				
			}
		},
		onError:function(){ //请求失败后执行[可选]
			popUpObj.init("获取数据失败！");
		},
        onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
        },
        post:"", 
        timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

function ajaxForLoadPlayList() {
	ajax({
		url: paramObj.serverUrl + "loadPlayList.do?userid=" + getCAcardNum(),// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			var json = eval('('+html+')');
			if("0" == json.status) {
				if(json.list.length > 0) {
					playListObj.init(json.list);
					playListObj.checkAndShowSM(1);
				}
			} else {
				
			}
		},
		onError:function(){ //请求失败后执行[可选]
			
		},
        onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
        },
        post:"", 
        timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

function ajaxForRemovePlayList(_id, _num) {
	ajax({
		url: paramObj.serverUrl + "removePlayList.do?userid=" + getCAcardNum() + "&id=" + _id,// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			playListObj.dataArray.splice(_num, 1);
			if(playListObj.pos == playListObj.cur_size - 1 && playListObj.page_pos == playListObj.page_size - 1) {
				playListObj.focusMove(-1);
			}
			playListObj.init();
			playListObj.checkAndShowSM();
		},
		onError:function(){ //请求失败后执行[可选]
			
		},
		onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
		},
		post:"", 
		timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

function ajaxForRemovePlayListAll() {
	ajax({
		url: paramObj.serverUrl + "removePlayListAll.do?userid=" + getCAcardNum(),// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			playListObj.dataArray = [];
			playListObj.init();		
			playListObj.checkAndShowSM();	
		},
		onError:function(){ //请求失败后执行[可选]
			
		},
		onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
		},
		post:"", 
		timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

function oparateCollect() {
	if(oparateObj.collect) {
		ajaxForRemoveCollect(oparateObj.id);
	} else {
		ajaxForAddCollect(oparateObj.id);
	}
}

function ajaxForAddCollect(_id) {
	ajax({
		url: paramObj.serverUrl + "addCollect.do?userid=" + getCAcardNum() + "&id=" + _id,// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			var json = eval('('+html+')');
			if("0" == json.status) {
				oparateObj.collect = true;
				playObj.initCollectMS(oparateObj.collect, 1);
				popUpObj.init("收藏成功！");
			} else {
				popUpObj.init(json.msg);
			}
		},
		onError:function(){ //请求失败后执行[可选]
			popUpObj.init("收藏失败！");
		},
        onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
        },
        post:"", 
        timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

function ajaxForRemoveCollect(_id) {
	ajax({
		url: paramObj.serverUrl + "removeCollect.do?userid=" + getCAcardNum() + "&id=" + _id,// 请求的URL,可传参数
		type: "GET", //HTTP 请求类型,GET或POST
		dataType: "html", //请求的文件类型html/xml
		onSuccess: function(html){ //请求成功后执行[可选]
			var json = eval('('+html+')');
			if("0" == json.status) {
				oparateObj.collect = false;
				playObj.initCollectMS(oparateObj.collect, 1);
				popUpObj.init("取消收藏成功！");
			} else {
				popUpObj.init(json.msg);
			}
		},
		onError:function(){ //请求失败后执行[可选]
			popUpObj.init("取消收藏失败！");
		},
        onComplete:function(){// 请求成功.失败或完成(无论成功失败都会调用)时执行的函数[可选]
		   // alert("onComplete");	             			           		  
        },
        post:"", 
        timeout:7000  //请求的超时时间，默认7000ms，也可自行设定[可选]
	});
}

var play_id_for_jl = "";
function ajaxForVODDATA(_id, _flag) {
	var flag = _flag || 0;
	if(!oparateObj.auth_jq_flag && 1 != flag) {
		popUpObj.doBack = function() {
			location.href = oparateObj.backUrl;
		}
		popUpObj.doFuc = function() {
			if(0 == popUpObj.pos) {
				location.href = Q.getNewAddUrl("order.htm") + "backUrl=" + Q.encode(oparateObj.backUrl);
			} else {
				location.href = oparateObj.backUrl;
			}
		};
		popUpObj.init("请先订购后，再来观看，谢谢！", "订购", "返回");
		return;
	}
	
	if("" != play_id_for_jl) {
		ajaxForPaly(play_id_for_jl, start_time);
	}
	play_id_for_jl = _id;
	
	ajaxForAuth(_id, function(_rtsp, _runTime) {
		oparateObj.runTime = _runTime;
		myMediaPlay.init(_rtsp);
	}, function() {
		//location.href = paramObj.serverUrl + "order.jsp?userid=" + Q.getGlobalVar("UserID") + "&userToken=" + Q.getGlobalVar("UserToken") + "&backUrl=" + Q.encode(backUrl);
		
		location.href = Q.getNewAddUrl("order.htm") + "backUrl=" + Q.encode(backUrl);
	}, flag);
}




var myMediaPlay = {
	mp : null,
	play_url : "",
	duration_time : 0,
	media_start_flag : 0,
	nativePlayerInstanceID : null,
	
	init : function(_play_url) {
		//$("test_new").innerHTML += "_play_url : " + _play_url + "<br/>";
		this.play_url = _play_url || this.play_url;
		if(null == this.mp) {
			this.mp = new MediaPlayer();
			this.nativePlayerInstanceID = this.mp.getPlayerInstanceID();
			//GlobalVarManager.setItemValue("PLAYER_INSTANCE_ID", nativePlayerInstanceID);
			this.mp.bindPlayerInstance(this.nativePlayerInstanceID);
			var displayMode=this.mp.getVideoDisplayMode();
			if(0==displayMode || "0"==displayMode){
			   this.mp.setVideoDisplayMode(1);
			   this.mp.refresh();
			}
			this.mp.enableTrickMode(true);
			this.setVolume(24);
		}
		
		this.mp.setMediaSource(this.play_url);
	},
	
	play : function() {
		this.duration_time = 0;
		this.media_start_flag = 1;
		this.speed = 1;
		this.speed_num = 0;
		
		this.mp.play();
	},
	
	//暂停
	pause_resume_flag : 0,
	pause : function()
	{
		this.mp.pause();
		this.pause_resume_flag = 1;
		$("bottom_btn1_in0").style.visibility = "visible";
		$("bottom_btn1_in1").style.visibility = "hidden";
		
		$("pause_div").style.visibility = "visible";
		$("play_status").style.visibility = "visible";
	},
	
	//恢复
	resume : function(_flag) {
		var flag = _flag || 0;
		if(!flag) {
			this.mp.resume();
		}
		this.pause_resume_flag = 0;
		$("bottom_btn1_in0").style.visibility = "hidden";
		$("bottom_btn1_in1").style.visibility = "visible";
		
		$("pause_div").style.visibility = "hidden";
		$("play_status").style.visibility = "hidden";
	},
	
	stop : function() {
		this.mp.stop();
		this.mp.unbindPlayerInstance(this.nativePlayerInstanceID);
	},
	
	getChangeTime : function(_time) {
		if(_time) {
			try {
				var timeArr = _time.split(":");
				return parseInt(timeArr[0]) * 3600 + parseInt(timeArr[1]) * 60 + parseInt(timeArr[2]);
			} catch(e) {
				return 0;
			}
		} else {
			return 0;
		}
	},
	
	getCurrentTime : function() {
		return parseInt(this.mp.getCurrentPlayTime());
	},
	
	getDurationTime : function() {
		var duration_time = this.getChangeTime(this.mp.getMediaDuration());
		
		if("" != duration_time && 0 != duration_time) {
			this.duration_time = duration_time;
			return this.duration_time;
		} else if(0 != oparateObj.runTime) {
			this.duration_time = oparateObj.runTime;
			return this.duration_time;
		} else {
			var that = this;
			setTimeout(function() {
				that.getDurationTime();
			}, 1000);
			return "";
		}
	},
	
	seek : function(_startTime) {
		var type = 1;
		var speed = 1;
		this.mp.seek(type, _startTime, speed);
		myMediaPlay.resume(1);
	},
	
	speed : 1,
	speed_num : 0,
	fastForward : function(_num) {
		var num = _num || 0;
		
		if(0 != num) {
			if(this.speed_num != num) {
				this.speed = 1;
				this.speed_num = num;
			}
			
			this.speed = this.speed * 2;
			if(this.speed > 32) {
				this.speed = 2;
			}
			
			clearTimeout(playObj.v_time_out);
			playObj.volumeHidden();
			clearTimeout(playObj.vm_time_out);
			$("play_status").style.visibility = "visible";
			$("speed_div").style.visibility = "visible";
			$("pause_div").style.visibility = "hidden";
			$("speed_status").style.backgroundImage = "url(images/" + (1 == num ? "forward.png" : "backward.png") + ")";
			$("speed_num").style.backgroundImage = "url(images/speed" + this.speed + ".png)";
			$("paly_chunk_in").style.display = "none";
			$("paly_chunk").style.display = "block";
			
			this.mp.setPace(this.speed * num);
		} else {
			this.speed = 1;
			this.speed_num = 0;
			$("play_status").style.visibility = "hidden";
			$("speed_div").style.visibility = "hidden";
			$("paly_chunk_in").style.display = "block";			
			playObj.visible(1);
			
			this.mp.setPace(this.speed);
		}
		//playObj.doSomethingForCT();
	},
	
	mute_volume_num : 0,
	getMuteFlag : function() {
		if(0 == this.getVolume()) {
			return true;
		} else {
			return false;
		}
	},
	
	setMuteFlag : function(_flag) {
		if(0 == this.getVolume()) {
			this.setVolume(this.mute_volume_num);
		} else {
			this.mute_volume_num = this.getVolume();
			this.setVolume(0);
		}
	},
	
	getVolume : function() {
		return parseInt(this.mp.getVolume());
	},
	
	setVolume : function(_volume) {
		this.mp.setVolume(_volume);
	},
	
	//一键到尾
	goEnd : function() {
		this.mp.gotoEnd();
	},
	
	//一键到头
	goStart : function() {
		this.mp.gotoStart();
	}
}

function grabEvent(_event){
	var code = Event(_event);
	//$("test_new").innerHTML += " code : " + code;
	switch(code){	
		case "KEY_UP": //
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}	
			oparateObj.moveY(-1);
			return false;
			break;
		case "KEY_DOWN": //
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}	
			oparateObj.moveY(1);
			return false;
			break;		
		case "KEY_LEFT": //		
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}		
			oparateObj.moveX(-1);
			return false;
			break;
		case "KEY_RIGHT": //		
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}		
			oparateObj.moveX(1);
			return false;
			break;		
		case "KEY_PAGE_UP": //		
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}		
			oparateObj.changePage(-1);
			return false;
			break;
		case "KEY_PAGE_DOWN": //	
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				return;
			}		
			oparateObj.changePage(1);
			return false;
			break;		
		case "KEY_SELECT": // 
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				myMediaPlay.fastForward();
			} else {
				oparateObj.doSelect();
			}
			return false;
			break;
		case "KEY_EXIT":
		case "KEY_BACK":
			oparateObj.doBack();
			return false;
			break;
		case "KEY_VOLUME_MUTE":
			if(0 != myMediaPlay.speed_num) {
				return;
			}
			playObj.changeMute();
			return false;
			break;
		case "KEY_VOLUME_UP":
			if(0 != myMediaPlay.speed_num) {
				return;
			}
			playObj.changeVolume(1);
			return false;
			break;
		case "KEY_VOLUME_DOWN":
			if(0 != myMediaPlay.speed_num) {
				return;
			}
			playObj.changeVolume(-1);
			return false;
			break;
		//case 1043://停止
		case 19://暂停
			myMediaPlay.fastForward();
			playObj.visible(1);
			playObj.pauseSM();
			return false;
			break;
		case 1045://播放
			if(0 != myMediaPlay.speed_num && 10 != oparateObj.area && 11 != oparateObj.area) {
				myMediaPlay.fastForward();
			} else {
				playObj.visible(1);
				playObj.playSM();
			}
			return false;
			break;
		case 417:
		case 75:
			myMediaPlay.fastForward(1);
			return false;
			break;
		case 412:
		case 74:
			myMediaPlay.fastForward(-1);
			return false;
			break;
		case 13001:
			myMediaPlay.play();
			myMediaPlay.fastForward();
			return false;
			break;
		case 13002:
			popUpObj.doBack = oparateObj.doBack;
			popUpObj.doFuc = oparateObj.doBack;
			popUpObj.init("媒体路径无效！");
			return false;
			break;
		case 13003:
			if(1 == myMediaPlay.media_start_flag) {
				myMediaPlay.media_start_flag = 0;
				start_time = Q.get_now_time();
				$("mute_img").style.visibility = myMediaPlay.getMuteFlag() ? "visible" : "hidden";
				playObj.doSomethingForCT();
				playObj.play_pos = 0;
				myMediaPlay.pause_resume_flag = 0;
				$("bottom_btn1_in0").style.visibility = "hidden";
				$("bottom_btn1_in1").style.visibility = "visible";
				dcPlayToReciveServlet();
			}
			return false;
			break;
		case 13004:
			popUpObj.doBack = oparateObj.doBack;
			popUpObj.doFuc = oparateObj.doBack;
			popUpObj.init("播放失败！");
			return false;
			break;
		case 13007:
		case 13008:
			playObj.doSomethingForCT();
			return false;
			break;
		case 13015:
			myMediaPlay.fastForward();
			switch(playObj.play_ms_pos) {
				case 0:
					if(playListObj.pos == playListObj.cur_size - 1 && playListObj.page_pos == playListObj.page_size - 1) {
						playListObj.pos = 0;
						playListObj.page_pos = 0;
						playListObj.init();
						playListObj.focusMove();
					} else {
						playListObj.focusMove(1);
					}
					break;
				case 1:
					playListObj.pos = playListObj.pos_this;
					playListObj.page_pos = playListObj.page_pos_this;
					playListObj.init();
					playListObj.focusMove();
					break;
				case 2:
					var num = Math.ceil((Math.random() * 1000)) % playListObj.len;
					playListObj.pos = num % playListObj.max_size;
					playListObj.page_pos = Math.ceil(num / playListObj.max_size) - 1;
					playListObj.init();
					playListObj.focusMove();
					break;
			}
			playListObj.doSelect();
			return false;
			break;
		default:
			break;
	}
};


function dcPlayToReciveServlet() {
	
}


function dcPauseToReciveServlet() {	
	
}

function dcVolumeToReciveServlet() {
	
}

function dcTCPopToReciveServlet() {	
	
}

function dcEndToReciveServlet() {	
	
}
</script>
</body>
</html>

