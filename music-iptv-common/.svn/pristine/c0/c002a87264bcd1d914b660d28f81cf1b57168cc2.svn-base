package hk.reco.music.iptv.common.dao;

import hk.reco.music.iptv.common.domain.EasyUiBaseQuery;
import hk.reco.music.iptv.common.domain.IptvResVer;
import hk.reco.music.iptv.common.enums.IptvObjectEnum;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface IptvResVerDao {
	
	public IptvResVer findByVid(@Param("vid") Long vid);
	public List<IptvResVer> findByVids(@Param("vids") List<Long> vids);
	public IptvResVer findByRidOnTest(@Param("rid") Long rid);
	public List<IptvResVer> findAllVerByRid(@Param("rid")Long rid);
	
	public List<Long> findLinkByLinkCrid(@Param("rid") Long rid);//找子为rid的link
	public List<Long> findLinkByLinkPrid(@Param("rid") Long rid);//找父为rid的link
	public IptvResVer findLink(@Param("prid")Long prid, @Param("crid")Long crid);
	public void updateTwoPoster(@Param("rid") Long rid, @Param("sposter")String sposter,@Param("bposter")String bposter);
	
	/////console
	public int createVersion(IptvResVer ver);
	public int updateResVer(IptvResVer ver);
	public Long findExistResLinkRid(@Param("prid")Long prid, @Param("crid")Long crid);
	
	public List<IptvResVer> consoleResListByType(@Param("query")EasyUiBaseQuery query, @Param("offset")int offset, @Param("size")int size);
	public int consoleResListByTypeCount(@Param("query") EasyUiBaseQuery query);
	
	public List<IptvResVer> consoleResListByMvOrSongType(@Param("query")EasyUiBaseQuery query, @Param("type")IptvObjectEnum type, 
			@Param("offset")int offset, @Param("size")int size);
	public List<IptvResVer> consoleResListBySingerOrDissType(@Param("query")EasyUiBaseQuery query, @Param("type")IptvObjectEnum type, 
			@Param("offset")int offset, @Param("size")int size);
	
	public List<IptvResVer> test(@Param("query")EasyUiBaseQuery query, @Param("type")String type, 
			@Param("offset")int offset, @Param("size")int size);
	
	//查出资源的版本信息(包括生产与测试版)
	public List<IptvResVer> consoleAllResBriefVerInfo(@Param("rid")Long rid);
	public void consoleResVersionStatuschange(@Param("vid")String versionId);
	public void consoleResChangeGlobalStatus(@Param("rid")Long rid);
	public List<IptvResVer> consolefindLinkBylinkPrid(Long rid);
	public void consoleDeleteByVid(Long vid);

	///////////stb
	public IptvResVer findResByRid(@Param("type")IptvObjectEnum type, @Param("rid")Long rid, @Param("test")boolean test);
	
	/**
	 * 分页查找子类
	 * @param type prid的类型
	 * @param prid
	 * @param sex
	 * @param keyword
	 * @param offset
	 * @param size
	 * @param excludeDisable
	 * @param test
	 * @return
	 */
	public List<IptvResVer> findResListPageable(@Param("type")IptvObjectEnum type, @Param("listType")IptvObjectEnum listType, @Param("prid")long prid, @Param("keyword")String keyword, 
			@Param("offset")int offset, @Param("size")int size, @Param("test")boolean test);
	
	public int findResListPageableCount(@Param("type")IptvObjectEnum type, @Param("listType")IptvObjectEnum listType, @Param("prid")long prid, @Param("keyword")String keyword, 
			@Param("test")boolean test);
	
	public List<IptvResVer> findResListByType(@Param("type")IptvObjectEnum type, @Param("test")boolean test);
	
	public List<IptvResVer> findFreeResListByType(@Param("type")IptvObjectEnum type, @Param("offset")int offset, @Param("size")int size, @Param("test")boolean test);
	public int findFreeResListByTypeCount(@Param("type")IptvObjectEnum type, @Param("test")boolean test);
	
	//根据类型和子类型查询,通常用于category
	public List<IptvResVer> findResListByTypeAndChildType(@Param("type")IptvObjectEnum type, @Param("child_type")IptvObjectEnum child_type, @Param("test")boolean test);
	
	//搜索接口
	public List<IptvResVer> searchResByKeyword(@Param("type")IptvObjectEnum type, @Param("pinyin")String pinyin, 
			@Param("offset")Integer offset, @Param("size")Integer size, @Param("test")boolean test);
	public int searchResByKeywordCount(@Param("type")IptvObjectEnum type, @Param("pinyin")String pinyin, @Param("test")boolean test);
	
	public List<Long> randomVid(@Param("type")IptvObjectEnum type, @Param("notVids")List<Long> notVids, @Param("size")int size, @Param("test")boolean test);
	
	public List<IptvResVer> findRecoVerByVids(@Param("vids")List<Long> vids, @Param("test")boolean test);
	
}
