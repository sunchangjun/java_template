<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="head :: cssAndJs(title=~{::title/text()})">
    <meta charset="UTF-8">
    <title>用户统计</title>
</head>
<body class="easyui-layout" >
    <div data-options="region:'south'" style="height:53%;width: 100%;">
        <div id="graph" style="width: 100%;height:100%;"></div>
    </div>
    <div data-options="region:'north'" style="height:47%;width: 100%;">
        <div id="wu-toolbar-2">
            <div class="wu-toolbar-button">
                <a href="#" class="easyui-linkbutton" iconCls="icon-control-fastforward-blue" id="sevenDay" onclick="chooseTime(7)" plain="true">7天</a>
                <a href="#" class="easyui-linkbutton" iconCls="icon-control-fastforward-blue" onclick="chooseTime(10)" plain="true">10天</a>
                <a href="#" class="easyui-linkbutton" iconCls="icon-control-fastforward-blue" onclick="chooseTime(30)" plain="true">30天</a>
            </div>
            <div>
                开始时间:
                <input class="easyui-datebox" id="startTime"></input>
                结束时间:
                <input class="easyui-datebox" id="endTime"></input>
                <a href="#" id="search" class="easyui-linkbutton" iconCls="icon-search" onclick="searchData()">搜索</a>
            </div>
        </div>
        <table id="data-table" class="easyui-datagrid" style="height:100%;width:100%;" toolbar="#wu-toolbar-2">
        </table>
    </div>
    <script type="text/javascript">
        $(function(){
           $("#sevenDay").trigger("click");
        })

        $('#startTime').datebox().datebox('calendar').calendar({
            validator: function(date){
                var now = new Date();
                var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate()-1);
                return date<=d1;
            }
        });


        $('#endTime').datebox().datebox('calendar').calendar({
            validator: function(date){
                var now = new Date();
                var d1 = new Date(now.getFullYear(), now.getMonth(), now.getDate()-1);
                return date<=d1;
            }
        });

        function searchData(){
            var startTime = $('#startTime').datebox('getValue');
            var endTime = $('#endTime').datebox('getValue');
            $.ajax({
                 url:'userStatsData',
                 type:"post",
                 data:{
                     startTime:startTime,
                     endTime:endTime
                 },
                success:function(res){
                   if(res.success){
                       var title = res.data[0];
                       res.data.splice(0,1);
                       var tabledata = [];
                       for(var i=0;i<res.data.length;i++){
                           tabledata.push(res.data[i]);
                       }
                       initTable(title,tabledata);
                       initGraph(title,res.data);
                   }else{
                       $.messager.alert("消息提示",res.msg);
                   }
                }
            });
        }

        function initTable(title,dataArray){
            var feild = [
            ];
            var columns = [];
            for(var key in title){
                var obj ={};
                obj.field = key;
                obj.title = title[key];
                obj.width =150;
                obj.align="center";
                feild.push(obj);
            }
            columns.push(feild);
            $("#data-table").datagrid({
                collapsible: true,
                singleSelect: true,
                selectOnCheck:false,
                loadFilter:pagerFilter,
                loadMsg:false,
                pageSize:10,
                data:dataArray,
                pagination: true,
                pageList:[10,50,100],
                columns: columns
            });
        }


        function initGraph(title,dataArray){
               /*date: "日期"
                play_duration_total: "点播总时长/秒"
                play_times_num: "点播总次数"
                play_user_num: "点播用户数"
                user_new_num: "当日新增用户"
                user_visit_num: "当日活跃用户/uv"
                user_visit_total: "用户总访问量/pv
                "*/
            dataArray.splice(dataArray.length-1,1);
            var xAxis = [];
            var play_duration_total={
                name:'点播总时长/秒',
                type:'line',
                stack: '总量',
                data:[]
            }
            var play_times_num={
                name:'点播总次数',
                type:'line',
                stack: '总量',
                data:[]
            }
            var play_user_num={
                name:'点播用户数',
                type:'line',
                stack: '总量',
                data:[]
            }
            var user_new_num={
                name:'当日新增用户',
                type:'line',
                stack: '总量',
                data:[]
            }
            var user_visit_num={
                name:'当日活跃用户/uv',
                type:'line',
                stack: '总量',
                data:[]
            }
            var user_visit_total={
                name:'用户总访问量/pv',
                type:'line',
                stack: '总量',
                data:[]
            }
            for(var i=0;i<dataArray.length;i++){
                xAxis.push(dataArray[i].date);
                play_duration_total.data[i]=dataArray[i].play_duration_total;
                play_times_num.data[i]=dataArray[i].play_times_num;
                play_user_num.data[i]=dataArray[i].play_user_num;
                user_new_num.data[i]=dataArray[i].user_new_num;
                user_visit_num.data[i]=dataArray[i].user_visit_num;
                user_visit_total.data[i]=dataArray[i].user_visit_total;
            }
            var series=[];
            series.push(play_duration_total);
            series.push(play_times_num);
            series.push(play_user_num);
            series.push(user_new_num);
            series.push(user_visit_num);
            series.push(user_visit_total);
            var option = {
                title: {
                    text: '用户统计图'
                },
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data:['点播总时长/秒','点播总次数','点播用户数','当日新增用户','当日活跃用户/uv','用户总访问量/pv']
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    containLabel: true
                },
                toolbox: {
                    feature: {
                        saveAsImage: {}
                    }
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: xAxis
                },
                yAxis: {
                    type: 'value'
                },
                series: series
            };

//graph

            var myChart = echarts.init(document.getElementById('graph'));
            // 使用刚指定的配置项和数据显示图表。
            myChart.setOption(option);

        }


        function pagerFilter(data){
            if (typeof data.length == 'number' && typeof data.splice == 'function'){	// is array
                data = {
                    total: data.length,
                    rows: data
                }
            }
            var dg = $(this);
            var opts = dg.datagrid('options');
            var pager = dg.datagrid('getPager');
            pager.pagination({
                onSelectPage:function(pageNum, pageSize){
                    opts.pageNumber = pageNum;
                    opts.pageSize = pageSize;
                    pager.pagination('refresh',{
                        pageNumber:pageNum,
                        pageSize:pageSize
                    });
                    dg.datagrid('loadData',data);
                }
            });
            if (!data.originalRows){
                data.originalRows = (data.rows);
            }
            var start = (opts.pageNumber-1)*parseInt(opts.pageSize);
            var end = start + parseInt(opts.pageSize);
            data.rows = (data.originalRows.slice(start, end));
            return data;
        }

        var dateUtil = {
            // 获得当前日期,格式:yyyy-MM-dd
            getNow: function() {
                var date = new Date();
                var y = date.getFullYear();
                var m = addZero(date.getMonth() + 1); // 获取当前月份的日期
                var d = addZero(date.getDate());
                return y + "-" + m + "-" + d;
            },
            // 获得当前日期前X天的日期,格式:yyyy-MM-dd
            getBeforeDate: function(dayCount) {
                var date = new Date();
                date.setDate(date.getDate() - dayCount); //获取dayCount天前的日期
                var y = date.getFullYear();
                var m = addZero(date.getMonth() + 1);
                var d = addZero(date.getDate());
                return y + "-" + m + "-" + d;
            },
            // 获得当前日期后X天的日期,格式:yyyy-MM-dd
            getAfterDate: function(dayCount) {
                var date = new Date();
                date.setDate(date.getDate() + dayCount); //获取dayCount天后的日期
                var y = date.getFullYear();
                var m = addZero(date.getMonth() + 1);
                var d = (date.getDate());
                return y + "-" + m + "-" + d;
            },
            // 获得当前月,格式:yyyy-MM
            getNowMonth: function() {
                var date = new Date();
                var y = date.getFullYear();
                var m = addZero(date.getMonth() + 1); // 获取当前月份的日期
                return y + "-" + m;
            },
            // 获得当前月前X月的年月,格式:yyyy-MM
            getBeforeMonth: function(monthCount) {
                var date = new Date();
                date.setMonth(date.getMonth() + 1 - monthCount); //获取dayCount天前的月
                var y = date.getFullYear();
                var m = addZero(date.getMonth());
                return y + "-" + m;
            },
            // 获得当前月后X月的年月,格式:yyyy-MM
            getAfterMonth: function(monthCount) {
                var date = new Date();
                date.setMonth(date.getMonth() + 1 - monthCount); //获取dayCount天后的日期
                var y = date.getFullYear();
                var m = addZero(date.getMonth());
                return y + "-" + m;
            }
        };
        function addZero(number) {
            if (number < 10) {
                number = '0' + number;
            }
            return number;
        }

        function chooseTime(days){
          var endday = dateUtil.getBeforeDate(1);
          var startday = dateUtil.getBeforeDate(days+1);
          $('#startTime').datebox('setValue',startday);
          $('#endTime').datebox('setValue',endday);
          $("#search").trigger("click");
        }
    </script>
</body>
</html>