<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="top :: framecssAndJs(title=~{::title/text()})">
    <meta charset="UTF-8">
    <title>QQ音乐首页</title>
</head>
<body>
<div class="main" th:style="'background-image:url('+${#httpServletRequest.getContextPath()}+'/show/images/bg.jpg);'">
    <p id="test" class="test">测试版</p>
    <p id="log" class="log"></p>
    <!--logo-->
    <img class="logo" th:src="@{/show/images/002.png}">
    <div class="main-body" >
        <!--头部-->
        <div  th:replace="layout :: layout(layoutData=${layouts})">
        </div>
        <div id="columnBody">
            <!--主体-->
            <div  th:if="${defaultLayout}" th:replace="layout :: customlayout(columns=${columns})">

            </div>
            <div th:if="${!defaultLayout}" th:replace="layout :: defaultlayout(cates=${cates})">

            </div>
        </div>
    </div>
    <div id="self_ad_focus">
        <table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0">
            <tr style="width: 100%">
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_lt.png); background-repeat:no-repeat;width: 50px;height: 50px;'"></td>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_t.png); background-repeat:repeat-x;height: 50px;'">&nbsp;</td>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_rt.png); background-repeat:no-repeat;width: 50px;height: 50px;'"></td>
            </tr>
            <tr>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_l.png); background-repeat:repeat-y;width: 50px;'"></td>
                <td id="focus_content">&nbsp;</td>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_r.png); background-repeat:repeat-y;width: 50px;'"></td>
            </tr>
            <tr>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_lb.png); background-repeat:no-repeat;width: 50px;height: 50px;'"></td>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_b.png); background-repeat:repeat-x;height: 50px;'">&nbsp;</td>
                <td th:style="'background:url('+${#httpServletRequest.getContextPath()}+'/show/images/focus/focus_rb.png); background-repeat:no-repeat;width: 50px;height: 50px;'"></td>
            </tr>
        </table>
        <a id="focus_link">
            <img id="focus_img"/>
            <span id="focus_title"></span>
        </a>
    </div>
</div>


<script type="text/javascript" th:inline="javascript">
    /*<![CDATA[*/
    var extraObject = {
        layout_index:'[[${extroInfo.layout_index}]]',
        area:'[[${extroInfo.area}]]',
        column_index:'[[${extroInfo.column_index}]]',
        item_index:'[[${extroInfo.item_index}]]',
        toString:function(){
            return "{\"layout_index\":"+this.layout_index+",\"area\":"+this.area+",\"column_index\":"+this.column_index+",\"item_index\":"+this.item_index+"}"
        }
    };
    ctxPath = /*[[@{/}]]*/ '';
    /*]]>*/
    /**
     * 布局对象
     * @type {{}}
     */
    var layoutObj = {
        data:[],
        rid:"",
        init:function(){
            var maintop = document.getElementById("maintop");
            this.data = maintop.getElementsByTagName("span");
            this.rid = this.data[extraObject.layout_index].id;
        },
        focusOn:function(){
            this.data[extraObject.layout_index].classList.add("title-active");
            this.data[extraObject.layout_index].classList.add("title-on");
            extraObject.area=0;
        },
        focusOut:function(){
            this.data[extraObject.layout_index].classList.remove("title-active");
            extraObject.area=1;
        },
        moveX:function(num){
            var backurl = Q.joinURL(Q.getUrlWithNoParam(window.location.href),"extra="+Q.encode(extraObject.toString()));
            if((num>0&&extraObject.layout_index<this.data.length-1)||(num<0&&extraObject.layout_index>0)){
                extraObject.layout_index = (extraObject.layout_index-1)+(num+1);
                var url = Q.joinURL(Q.getUrlWithNoParam(window.location.href),"extra="+Q.encode(extraObject.toString()))+"&backurl="+Q.encode(backurl)+"&test="+paramObj.test;
                window.location.href = url;
            }
        },
        moveY:function(num){
            if(num>0){
                //移除自身的
                this.focusOut();
                columnObj.focus(1,0);
            }
        }
    };
    /**
     * 栏目对象
     * @type {{}}
     */
    var columnObj = {
        data:[],
        index:0,
        items:[],
        init:function(){
            var divs=   $("columnBody").getElementsByTagName("div");
            var active = 0;
            for(var i = 0;i<divs.length;i++){
                var colDivs = divs[i].classList.contains("column");
                if(colDivs){
                    var colDiv = divs[i];
                    var items = colDiv.getElementsByTagName("a");
                    if(items.length>0){
                        colDiv.items = items;
                        if(colDiv.classList.contains("regular")){
                            this.regularInit(colDiv);
                        }
                        this.data.push(colDiv);
                    }
                }
            }
        },
        regularInit:function(regularEl){
            var title =  regularEl.title;
            //栏目显示多少行
            regularEl.column_line =  parseInt(title.split(" ")[0]);
            //栏目类型
            regularEl.colum_type = title.split(" ")[1];
            //栏目当前所在行
            regularEl.current_line=1;
            //分页依据
            var sum = regularEl.column_line==1?6:12;
            if(regularEl.colum_type=='mv'){
                sum = regularEl.column_line==1?4:8;
            }
            //当前页
            regularEl.current_page = 0;
            regularEl.pageItems= new Array();
            //初始化栏目分页
            var pages = regularEl.items.length/sum;
            var spans = regularEl.parentNode.parentNode.getElementsByTagName("span");
            for(var k = 0; k<spans.length;k++){
                if(spans[k].classList.contains("column_pages")){
                    regularEl.column_page_span = spans[k];
                    break;
                }
            }
            var pageInfo = '';
            for(var i=0; i<pages;i++){
                regularEl.pageItems[i]=[];
                //这个地方可以加导航条（暂保留）
                //<img src="/images/colum_pages.png">
                if(pages>1){
                    if(i == Math.floor(pages)||(Math.floor(pages)==pages&&i==pages-1)){
                        pageInfo += '<img src="'+ctxPath+'/show/images/column_pages_show.png"/>';
                    }else{
                        pageInfo += '<img src="'+ctxPath+'/show/images/colum_pages.png">';
                    }
                }
            }
            regularEl.column_page_span.innerHTML = pageInfo;
            //初始化栏目分页数据
            for(var j= 0 ;j<regularEl.items.length;j++){
                var item = regularEl.items[j];
                var k = Math.floor(j/sum);
                regularEl.pageItems[k].push(item);
            }

        },
        focus:function(num,index,itemindex){
            this.index= index;
            if(!itemindex){
                itemindex = 0;
                this.items = this.data[index].items;
                if(this.data[index].classList.contains("irregular")) {
                    //不规则布局
                    for (var j = 1; j < this.items.length; j++) {
                        if (parseInt(this.items[j].style.left) < parseInt(this.items[itemindex].style.left) ||
                            parseInt(this.items[j].style.top) < parseInt(this.items[itemindex].style.top)) {
                            itemindex = j;
                        }
                    }
                }
            }
            itemObj.data = this.items[itemindex];
            itemObj.itemindex = itemindex;
            itemObj.focusOn();
        },
        moveX:function(num){
            if(this.data[this.index].classList.contains("irregular")){
                this.doMoveX(num,this.items);
            }else{
                var cur_item =  this.data[this.index];
                this.doMoveX(num,cur_item.pageItems[cur_item.current_page]);
            }
        },
        doMoveX:function(num,items){
            var cPs =  itemObj.getRect(itemObj.data);
            var nextindex = 0;
            //下一个元素的绝对值
            //var nextLeft = 10000;
            // var nextTop = 10000;
            var abs = 10000;
            var nextEl =0;
            //筛选
            for (var i=0;i<items.length;i++){
                var next = items[i];
                var nPs =  itemObj.getRect(next);
                if(cPs.top==nPs.top&&cPs.left==nPs.left){
                    //元素本身
                    continue;
                }
                if((nPs.left+nPs.width)<cPs.left&&num<0||nPs.left>(cPs.left+cPs.width)&&num>0){
                    if(Math.abs(cPs.top-nPs.top)+Math.abs(cPs.left-nPs.left)<abs){
                        // nextLeft = Math.abs(cPs.left-nPs.left);
                        // nextTop = Math.abs(cPs.top-nPs.top);
                        abs = Math.abs(cPs.top-nPs.top)+Math.abs(cPs.left-nPs.left);
                        nextEl = next;
                        nextindex = i;
                    }
                }
            }
            if(nextEl===0){
                //没有元素了
                this.changePage(num);
            }else{
                itemObj.data = nextEl;
                itemObj.itemindex = nextindex;
                itemObj.focusOn();
            }
        },
        changePage:function(num){
            var cur_item =  this.data[this.index];
            var index = cur_item.current_page+num;
            var images = cur_item.column_page_span.getElementsByTagName("img");
            //处理分页数据
            if(cur_item.classList.contains("regular")&&cur_item.pageItems.length>1&&0<=index&&index<cur_item.pageItems.length){
                //分页图标处理
                for(var i=0;i<cur_item.pageItems.length;i++){
                    if(i==cur_item.pageItems.length-index-1){
                        images[i].src=ctxPath+"/show/images/column_pages_show.png";
                    }else{
                        images[i].src=ctxPath+"/show/images/colum_pages.png";
                    }
                }
                var parent = cur_item.getElementsByTagName("div")[0];
                //隐藏显示页数据
                for(var i=0;i<cur_item.pageItems[cur_item.current_page].length;i++){
                    cur_item.pageItems[cur_item.current_page][i].style.display = "none";
                }
                cur_item.current_page = index;
                for(var j = 0;j<cur_item.pageItems[cur_item.current_page].length;j++){
                    cur_item.pageItems[cur_item.current_page][j].style.display = "block";
                }
                itemObj.data = cur_item.pageItems[cur_item.current_page][0];
                var cur_item =  this.data[this.index];
                cur_item.current_line = 1;
                if(cur_item.classList.contains("cate")){
                    if(num>0){
                        itemObj.data.scrollIntoView(false);
                    }else{
                        itemObj.data.scrollIntoView();
                    }
                }
                itemObj.focusOn();
            }
        },
        resetFocus:function(){
            var cur_item =  this.data[this.index];
            itemObj.data =  cur_item.items[extraObject.item_index];
            cur_item.scrollIntoView(false);
            if(cur_item.classList.contains("irregular")){
                this.items = cur_item.items;
                if(cur_item.classList.contains("cate")){
                    itemObj.data.scrollIntoView(false);
                }
            }else{
                //分页依据
                var sum = cur_item.column_line==1?6:12;
                if(cur_item.colum_type=='mv'){
                    sum = cur_item.column_line==1?4:8;
                }
                //计算当前页数
                var index =   Math.floor(extraObject.item_index/sum);
                //处理分页数据
                if(cur_item.pageItems.length>1&&0<=index&&index<cur_item.pageItems.length){
                    var images = cur_item.column_page_span.getElementsByTagName("img");
                    //分页图标处理
                    for(var i=0;i<cur_item.pageItems.length;i++){
                        if(i==cur_item.pageItems.length-index-1){
                            images[i].src=ctxPath+"/show/images/column_pages_show.png";
                        }else{
                            images[i].src=ctxPath+"/show/images/colum_pages.png";
                        }
                    }
                    var parent = cur_item.getElementsByTagName("div")[0];
                    //隐藏显示页数据
                    for(var i=0;i<cur_item.pageItems[0].length;i++){
                        cur_item.pageItems[0][i].style.display = "none";
                    }
                    cur_item.current_page = index;
                    var tmpIndex = 0;
                    this.items =cur_item.pageItems[index];
                    for(var j = 0;j<cur_item.pageItems[cur_item.current_page].length;j++){
                        cur_item.pageItems[cur_item.current_page][j].style.display = "block";
                        if(cur_item.pageItems[cur_item.current_page][j]===itemObj.data){
                            tmpIndex = j;
                        }
                    }
                    if(cur_item.column_line==2&&(tmpIndex/sum)>=0.5){
                        cur_item.current_line = 2;
                    }
                }
            }
            itemObj.focusOn();
        },
        doMoveY:function(num,items){
            var cPs =  itemObj.getRect(itemObj.data);
            var nextindex = 0;
            //下一个元素的绝对值
            //var nextLeft = 10000;
            // var nextTop = 10000;
            var nextEl =0;
            var abs = 10000;
            //筛选
            for (var i=0;i<items.length;i++){
                var next = items[i];
                var nPs =  itemObj.getRect(next);
                if(cPs.top==nPs.top&&cPs.left==nPs.left){
                    //元素本身
                    continue;
                }
                if((nPs.top+nPs.height)<cPs.top&&num<0||nPs.top>(cPs.top+cPs.height)&&num>0){
                    if(Math.abs(cPs.top-nPs.top)+Math.abs(cPs.left-nPs.left)<abs){
                        // nextLeft = Math.abs(cPs.left-nPs.left);
                        //   nextTop = Math.abs(cPs.top-nPs.top);
                        abs =Math.abs(cPs.top-nPs.top)+Math.abs(cPs.left-nPs.left);
                        nextEl = next;
                        nextindex = i;
                    }
                }
            }
            if(nextEl===0){
                //没有元素了
                this.focusOut(num);
            }else{
                itemObj.data = nextEl;
                var cur_item =  this.data[this.index];
                if(cur_item.classList.contains("cate")){
                    if(num>0){
                        nextEl.scrollIntoView(false);
                    }else{
                        nextEl.scrollIntoView();
                    }
                }
                itemObj.itemindex = nextindex;
                itemObj.focusOn();
            }
        },
        focusOut:function(num){
            if(num>0){
                //后一个栏目
                if(this.data.length-1 > this.index){
                    this.nextColumn(num);
                }
            }else{
                //前一个栏目
                if(this.index==0){
                    itemObj.hideFocusObj();
                    layoutObj.focusOn();
                }else{
                    this.nextColumn(num);
                }
            }
        },
        nextColumn:function(num){
            this.index = this.index +num;
            if(num>0){
                this.data[this.index].scrollIntoView(false);
            }else{
                this.data[this.index].scrollIntoView();
            }
            var column = this.data[this.index];
            this.doMoveY(num,column.pageItems?column.pageItems[column.current_page]:column.items);
        },
        moveY:function(num){
            var cur_item =  this.data[this.index];
            if(cur_item.classList.contains("irregular")){
                this.doMoveY(num,this.items);
            }else{
                if(cur_item.column_line ==1||(cur_item.current_line==2&&num>0)||(cur_item.current_line==1&&num<0)){
                    this.focusOut(num);
                }else {
                    cur_item.current_line = cur_item.current_line+num;
                    this.doMoveY(num,cur_item.pageItems[cur_item.current_page]);
                }
            }
        }
    };
    /**
     * 媒体对象
     * @type {{}}
     */
    var itemObj = {
        data:null,
        itemindex:0,
        focusEl:$("self_ad_focus"),
        focusOn:function(){
            var position = this.getRect(itemObj.data);
            this.setfocusElStyle(position);
            this.showFocusObj();
            //是否显示标题(规则显示，不规则不显示)
            var column = columnObj.data[columnObj.index];
            extraObject.column_index = columnObj.index;
            if(column.classList.contains("irregular")){
                $("focus_title").innerHTML="";
            }else{
                var length = 28;
                var type= this.data.title.split("|")[2];
                if(type=="mv"){
                    var length = 50;
                }
                if(type!='cate'){
                    showTitleForMarquee(this.data.title.split("|")[4],$("focus_title"),20);
                }
            }
            //处理序号
            var items = column.items;
            for(var i=0;i<items.length;i++){
                if(items[i] == this.data){
                    extraObject.item_index = i;
                }
            }
        },
        showFocusObj:function(){
            this.focusEl.style.visibility =  "visible";
        },
        hideFocusObj:function(){
            this.focusEl.style.visibility = "hidden";
        },
        setfocusElStyle:function(obj){
            this.focusEl.style.width = (obj.width+140)+"px";
            this.focusEl.style.height = (obj.height+140)+"px";
            this.focusEl.style.top =(obj.top-39)+"px";
            this.focusEl.style.left =(obj.left-39)+"px";
            $("focus_content").style.width=(obj.width-24)+"px";
            $("focus_content").style.height=(obj.height-24)+"px";
            $("focus_link").style.width = (obj.width+18)+"px";
            $("focus_link").style.height = (obj.height+18)+"px";
            $("focus_title").style.width = (obj.width)+"px";
            var imgEl = this.data.getElementsByTagName("img")[0];
            $("focus_img").src = imgEl.src;
            var span =  this.data.getElementsByTagName("span")[0];
        },
        doSelect:function(){
            //title属性承载了所有item属性 结构是 rid|vid|type|childType|name
            var properties =  this.data.title.split("|");
            var rid = properties[0];
            var type= properties[2];
            var chidlType = properties[3];
            var name = properties[4];
            var backurl = Q.joinURL(Q.getUrlWithNoParam(window.location.href),"extra="+Q.encode(extraObject.toString()))+"&test="+ paramObj.test;
            switch(type)
            {
                case "mv":
                case "song":
                    //鉴权播放
                    var obj = {};
                    obj.rid = rid;
                    obj.type = type;
                    paramObj.prid = layoutObj.rid;
                    ajaxForAuth(obj,backurl,function(authResult){
                        checkAndToPlay(authResult,backurl,"","",layoutObj.rid,paramObj.test);
                    })
                    break;
                case "singer":
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=gs";
                    window.location.href=url;
                    break;
                case "diss":
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=gd";
                    window.location.href=url;
                    break;
                case "func":
                    //歌手页面
                    this.doFuncSelect(rid,name,chidlType,backurl);
                    break;
                case "cate":
                    //分类页面
                    this.doCatecSelect(rid,name,chidlType,backurl);
                    break;
                case "theme":
                    var url = Q.getNewAddUrl("theme")+"backUrl="+Q.encode(backurl)+"&webFlag=1"+"&rid="+rid+"&prid="+layoutObj.rid+"&test="+ paramObj.test
                    window.location.href=url;
                    //主题页面
                    break;
                case "top":
                    //分类页面
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=top";
                    window.location.href=url;
                    break;
                default:
            }
        },
        doCatecSelect:function(rid,name,childType,backurl){
            switch (childType){
                case "singer":
                    var url = Q.getNewAddUrl("singer.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)+"&prid="+layoutObj.rid+"&test="+ paramObj.test;
                    window.location.href=url;
                    break;
                case "diss":
                    var url = Q.getNewAddUrl("gd_list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)+"&prid="+layoutObj.rid+"&test="+ paramObj.test;
                    window.location.href=url;
                    break;
                default:
                    var img = this.data.getElementsByTagName("img")[0];
                    var url = Q.getNewAddUrl("cate.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode(name)
                        +"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&type="+childType+"&img="+Q.encode(img.src);
                    window.location.href=url;
            }
        },
        doFuncSelect:function(rid,name,childType,backurl){
            switch (childType){
                case "func_search":
                    var url = Q.getNewAddUrl("search.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode("搜索")+"&prid="+layoutObj.rid+"&test="+ paramObj.test;
                    window.location.href=url;
                    break;
                case "func_history":
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode("播放历史")+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=play_record";
                    window.location.href=url;
                    break;
                case "func_collect_diss":
                    var url = Q.getNewAddUrl("gd_list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode("我的歌单")+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&me=true";
                    window.location.href=url;
                    break;
                case "func_collect_media":
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode("我的收藏")+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=collect";
                    window.location.href=url;
                    break;
                case "func_free":
                    var url = Q.getNewAddUrl("list.htm")+"backUrl="+Q.encode(backurl)+"&rid="+rid+"&name="+Q.encode("免费专区")+"&prid="+layoutObj.rid+"&test="+ paramObj.test+"&code=free";
                    window.location.href=url;
                    break;
                case "func_order":
                    break;
                default:
                    alert(childType);
            }
        },
        getRect:function(element) {
            var rect = element.getBoundingClientRect();
            var top = document.documentElement.clientTop;
            var left= document.documentElement.clientLeft;
            return{
                top    :   rect.top - top,   //如果是IE7以下那么 结果为 ‘2 - 2’。 不是为IE的话 结果是 ‘ 0 - 0 ’；  不管哪种方式，结果最终就是0
                bottom :   rect.bottom - top,
                left   :   rect.left - left,
                right  :   rect.right - left,
                width:  parseInt(element.style.width),
                height:parseInt(element.style.height)
            }
        }
    };



    function init(){
        consolelog({"test":"sssssss"});
        initglobalParam();
        checkAndInitPress();
        //初始化所有的布局
        layoutObj.init();
        //初始化所有栏目
        columnObj.init();
        //聚焦操作
        if(extraObject.area==0){
            layoutObj.focusOn();
        }else{
            layoutObj.focusOn();
            layoutObj.focusOut();
            columnObj.index = parseInt(extraObject.column_index);
            // var item_index = extraObject.item_index;
            columnObj.resetFocus();
        }
        for(var i =0;i<columnObj.data.length;i++){
            if(i<extraObject.column_index&&columnObj.data[i].column_line==2){
                columnObj.data[i].current_line=2
            }
        }
    }

    function grabEvent(_event){
        var code = Event(_event);
        switch(code){
            case "KEY_UP": //
                if(extraObject.area==0){
                    // layoutObj.moveX(1);
                }else{
                    columnObj.moveY(-1);
                }
                return false;
                break;
            case "KEY_DOWN": //
                if(extraObject.area==0){
                    layoutObj.moveY(1);
                }else{
                    columnObj.moveY(1);
                }
                return false;
                break;
            case "KEY_LEFT": //
                if(extraObject.area==0){
                    layoutObj.moveX(-1);
                }else{
                    columnObj.moveX(-1);
                }
                return false;
                break;
            case "KEY_RIGHT": //
                if(extraObject.area==0){
                    layoutObj.moveX(1);
                }else{
                    columnObj.moveX(1);
                }
                return false;
                break;
            case "KEY_PAGE_UP": //
                return false;
                break;
            case "KEY_PAGE_DOWN": //
                return false;
                break;
            case "KEY_SELECT": //
                if(extraObject.area==1){
                    itemObj.doSelect();
                }
                return false;
                break;
            case "KEY_EXIT":
            case "KEY_BACK":
                return false;
                break;
            case "KEY_NUMBER7":
                paramObj.test_string += "7";
                break;
            case "KEY_NUMBER6":
                paramObj.test_string += "6";
                if(paramObj.test_string.indexOf("1407666") > -1) {
                    paramObj.test = !paramObj.test;
                    var href = window.location.href
                    var url = href.split("?")[0]+"?test="+ paramObj.test;
                    window.location.href=url;
                }
                break;
            case "KEY_NUMBER4":
                paramObj.test_string += "4";
                break;
            case "KEY_NUMBER1":
                paramObj.test_string += "1";
                break;
            case "KEY_NUMBER0":
                paramObj.test_string += "0";
                break;
            default:
                break;
        }
    };

    window.onload= init();
    /*
    * 代码说明:
    * 1、column所有属性定义在columnObject的data上，data指的是对应元素。此处用标签对象承载了所有的colum属性（包括column的本身属性和计算属性）
    * 2、itemObj 的data承载了被选中模块的信息 包括资源的rid|vid|type|childtype|name 其按顺序格式承载到title属性上
    * */
</script>
</body>
</html>